/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ex05;

import javax.swing.JOptionPane;

/**
 *
 * @author Alumne
 */
public class Damas extends javax.swing.JFrame {

    /**
     * Creates new form Damas
     */
    
    // Variables globales
    boolean jugaX = true;
    boolean jugaO = false;
    int filaOrigen = -1;
    int columnaOrigen = -1;
    
    public Damas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btSortir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btSortir.setText("Salir");
        btSortir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSortirActionPerformed(evt);
            }
        });

        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, "O", null, "O", null, "O", null, "O"},
                {"O", null, "O", null, "O", null, "O", null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, "", null, null, "", null},
                {null, "X", null, "X", null, "X", null, "X"},
                {"X", null, "X", null, "X", null, "X", null}
            },
            new String [] {
                "1", "2", "3", "4", "5", "6", "7", "8"
            }
        ));
        Table.setGridColor(new java.awt.Color(204, 204, 204));
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(btSortir))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(71, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(78, 78, 78))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(btSortir)
                .addGap(43, 43, 43)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSortirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSortirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btSortirActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        int fila = obtenirFilaClicada();
        int columna = obtenirColumnaClicada();

        if (noHiHaOrigen()) {
            if ((jugaX)&&(EsX(fila,columna))) {
                ActualitzaNouOrigen(fila,columna);
            } else if ((jugaO) && (EsO(fila,columna))) {
                ActualitzaNouOrigen(fila,columna);
            } else {
                mostraError();
            }
        } else {
            if (movimentValid(fila,columna)) {
                if ((esBuit(fila,columna))||(OcupatContrari(fila,columna))) {
                    mou(fila,columna);
                } else if (OcupatPropi(fila,columna)) {
                    ActualitzaNouOrigen(fila,columna);
                }    
            } else {
                mostraErrorMoviment();         
            }
        }
    }//GEN-LAST:event_TableMouseClicked

    public int obtenirFilaClicada(){
        int fila = 0;
        fila = Table.getSelectedRow();
        
        return fila;
    }
    
    public int obtenirColumnaClicada() {
        int columna = 0;
        columna = Table.getSelectedColumn();
        return columna;
    }
    
    public boolean noHiHaOrigen() {
        boolean origen = false;
        
        if (filaOrigen == - 1 || columnaOrigen == - 1) {
            origen = true;
        }
        
        return origen;
    }

    public void mostraError() {
        JOptionPane.showMessageDialog(null,"Error","Ooohh hi ha hagut un error!",
                JOptionPane.ERROR_MESSAGE);
        
        filaOrigen = -1;
        columnaOrigen = -1;
    }
    
    public void mostraErrorMoviment() {

        JOptionPane.showMessageDialog(null,"Error","Ooohh hi ha hagut un error!",
                JOptionPane.ERROR_MESSAGE);
        
        filaOrigen = -1;
        columnaOrigen = -1;
    }
    
    public boolean EsX(int fila,int columna) {
        
        if ((Table.getValueAt(fila, columna).equals("X"))) {
            return true;
        } else {
            return false;
        }   
    }
    
    public boolean EsO(int fila,int columna) {
        
        if ((Table.getValueAt(fila, columna).equals("O"))) {
            return true;
        } else {
            return false;
        } 
    }

    public void ActualitzaNouOrigen(int fila,int columna) {
        filaOrigen = fila;
        columnaOrigen = columna;
    }

    public boolean movimentValid(int fila,int columna) {
        boolean valid = false;
        int filaPos = fila - filaOrigen;
        int columnaPos = columna - columnaOrigen;
        
        if ((jugaX && (filaPos == -1) && ((columnaPos == 1)))
                || (columnaPos ==-1)) {
            valid = true;
        } else if ((jugaO && (filaPos == -1) && ((columnaPos == 1)))
                || (columnaPos ==-1)) {
            valid = true;
        }
        

        return valid;
    }

    public void mou(int fila,int columna){
        int mou = 0;
        Table.setValueAt(null, filaOrigen, columnaOrigen);
        
        if (jugaO) {
            Table.setValueAt("O", fila, columna);
            filaOrigen = -1;
            columnaOrigen = -1;
            jugaX = true;
            jugaO = false;
        } else {
            Table.setValueAt("X", fila, columna);
            filaOrigen = -1;
            columnaOrigen = -1;
            jugaO = true;
            jugaX = false;
        }
        
    }
    
    public boolean OcupatPropi(int fila,int columna) {
        boolean ocupat = false;
        
        if (((jugaX == true && EsX(fila,columna)) == true) || 
                ((jugaO == true && EsO(fila,columna)) == true)){
            ocupat = true;    
        }
        
        return ocupat;
    }
    
    public boolean OcupatContrari(int fila, int columna) {
        boolean ocupat = false;
        if (((jugaX == true && EsO(fila,columna)) == true) || 
                ((jugaO == true && EsX(fila,columna)) == true)){
            ocupat = true;    
        }
        return ocupat;
    }

    public boolean esBuit(int fila, int columna) {
        if ((Table.getValueAt(fila, columna) == null)) {
            return true;
        } else {
            return false;
        } 
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Damas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Damas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Damas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Damas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Damas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table;
    private javax.swing.JButton btSortir;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
